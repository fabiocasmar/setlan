
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = "\xd1\xd7\xce\x94\x1e\x1660\xbbI\x14~\x8d?\xa2'"
    
_lr_action_items = {'DO':([14,15,20,24,26,38,40,41,42,43,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,111,112,127,],[-26,-27,-30,-31,-28,-38,-44,-42,-52,-43,-32,-29,-55,-58,-53,-57,-34,-47,-39,-48,-33,-59,-36,-37,-35,-45,-49,-51,-56,-46,-54,-40,-41,-50,114,120,121,131,]),'GREAT':([14,15,20,24,26,27,36,38,40,41,42,43,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,112,119,],[-26,-27,-30,-31,-28,44,44,-38,-44,-42,44,-43,44,44,44,-32,-29,44,None,44,None,44,-34,-47,-39,-48,-33,44,-36,-37,-35,-45,-49,44,None,-46,None,-40,-41,44,44,44,44,]),'UNEQUAL':([14,15,20,24,26,27,36,38,40,41,42,43,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,112,119,],[-26,-27,-30,-31,-28,45,45,-38,-44,-42,45,-43,45,45,45,-32,-29,45,-55,None,-53,None,-34,-47,-39,-48,-33,45,-36,-37,-35,-45,-49,45,-56,-46,-54,-40,-41,45,45,45,45,]),'SCAN':([1,7,9,30,105,109,113,114,118,120,121,130,131,],[3,-9,3,3,-10,-9,3,3,3,3,3,3,3,]),'IN':([73,116,125,],[109,-5,-6,]),'NUMBER':([4,6,16,17,18,21,22,23,25,28,34,35,39,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,75,76,110,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'PRINTLN':([1,7,9,30,105,109,113,114,118,120,121,130,131,],[4,-9,4,4,-10,-9,4,4,4,4,4,4,4,]),'WHILE':([1,7,9,13,14,15,19,20,24,26,27,29,30,32,38,40,41,42,43,67,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,109,113,114,118,120,121,122,123,126,127,128,129,130,131,132,133,],[5,-9,5,-14,-26,-27,-16,-30,-31,-28,-17,-15,5,74,-38,-44,-42,-52,-43,-3,-2,-32,-29,-18,-55,-58,-53,-57,-34,-47,-39,-48,-33,-59,-36,-37,-35,-45,-49,-51,-56,-46,-54,-40,-41,-50,-10,-9,5,5,5,5,5,-20,-23,-4,-24,-22,-21,5,5,-19,-25,]),'PROGRAM':([0,],[1,]),'PRINT':([1,7,9,30,105,109,113,114,118,120,121,130,131,],[6,-9,6,6,-10,-9,6,6,6,6,6,6,6,]),'TRUE':([4,6,16,17,18,21,22,23,25,28,34,35,39,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,75,76,110,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'OPENPAREN':([4,5,6,12,16,17,18,21,22,23,25,28,34,35,39,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,74,75,76,110,],[16,28,16,35,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,110,16,16,16,]),'DIVIDE':([14,15,20,24,26,27,36,38,40,41,42,43,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,112,119,],[-26,-27,-30,-31,-28,54,54,-38,54,54,54,54,54,54,54,-32,-29,54,54,54,54,54,54,54,54,54,54,54,-36,-37,-35,54,54,54,54,54,54,54,54,54,54,54,54,]),'OPENCURLY':([1,4,6,7,9,16,17,18,21,22,23,25,28,30,34,35,39,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,75,76,105,109,110,113,114,118,120,121,130,131,],[7,17,17,-9,7,17,17,17,17,17,17,17,17,7,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-10,-9,17,7,7,7,7,7,7,7,]),'SET':([31,73,116,125,],[69,69,-5,-6,]),'SETUNION':([14,15,20,24,26,27,36,38,40,41,42,43,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,112,119,],[-26,-27,-30,-31,-28,50,50,-38,-44,-42,50,-43,50,50,50,-32,-29,50,50,50,50,50,-34,-47,-39,-48,-33,50,-36,-37,-35,-45,-49,50,50,-46,50,-40,-41,50,50,50,50,]),'SEMICOLON':([13,14,15,19,20,24,26,27,29,38,40,41,42,43,67,68,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,117,122,123,124,126,127,128,129,132,133,],[-14,-26,-27,-16,-30,-31,-28,-17,-15,-38,-44,-42,-52,-43,-3,105,-2,-32,-29,-18,-55,-58,-53,-57,-34,-47,-39,-48,-33,-59,-36,-37,-35,-45,-49,-51,-56,-46,-54,-40,-41,-50,-7,116,125,-20,-23,-8,-4,-24,-22,-21,-19,-25,]),'CLOSEPAREN':([14,15,20,24,26,36,38,40,41,42,43,66,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,119,],[-26,-27,-30,-31,-28,79,-38,-44,-42,-52,-43,104,113,-32,-29,-55,-58,-53,-57,-34,-47,-39,-48,-33,-59,-36,-37,-35,-45,-49,-51,-56,-46,-54,-40,-41,-50,127,]),'LESS':([14,15,20,24,26,27,36,38,40,41,42,43,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,112,119,],[-26,-27,-30,-31,-28,46,46,-38,-44,-42,46,-43,46,46,46,-32,-29,46,None,46,None,46,-34,-47,-39,-48,-33,46,-36,-37,-35,-45,-49,46,None,-46,None,-40,-41,46,46,46,46,]),'MINUS':([4,6,14,15,16,17,18,20,21,22,23,24,25,26,27,28,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,110,111,112,119,],[18,18,-26,-27,18,18,18,-30,18,18,18,-31,18,-28,48,18,18,18,48,-38,18,48,48,48,48,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,48,18,18,48,48,-32,-29,48,48,48,48,48,-34,48,48,48,-33,48,-36,-37,-35,48,48,48,48,48,48,48,48,48,18,48,48,48,]),'TIMES':([14,15,20,24,26,27,36,38,40,41,42,43,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,112,119,],[-26,-27,-30,-31,-28,56,56,-38,56,56,56,56,56,56,56,-32,-29,56,56,56,56,56,56,56,56,56,56,56,-36,-37,-35,56,56,56,56,56,56,56,56,56,56,56,56,]),'SETDIVITION':([14,15,20,24,26,27,36,38,40,41,42,43,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,112,119,],[-26,-27,-30,-31,-28,51,51,-38,51,51,51,51,51,51,51,-32,-29,51,51,51,51,51,-34,-47,51,-48,-33,51,-36,-37,-35,51,-49,51,51,51,51,51,51,51,51,51,51,]),'PLUS':([14,15,20,24,26,27,36,38,40,41,42,43,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,112,119,],[-26,-27,-30,-31,-28,52,52,-38,52,52,52,52,52,52,52,-32,-29,52,52,52,52,52,-34,52,52,52,-33,52,-36,-37,-35,52,52,52,52,52,52,52,52,52,52,52,52,]),'COMMA':([14,15,19,20,24,26,27,29,37,38,40,41,42,43,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,117,124,],[-26,-27,39,-30,-31,-28,-17,39,39,-38,-44,-42,-52,-43,-32,-29,-18,-55,-58,-53,-57,-34,-47,-39,-48,-33,-59,-36,-37,-35,-45,-49,-51,-56,-46,-54,-40,-41,-50,-7,115,115,-8,]),'ASSIGN':([11,],[34,]),'$end':([2,8,13,14,15,19,20,24,26,27,29,38,40,41,42,43,67,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,122,123,126,127,128,129,132,133,],[0,-1,-14,-26,-27,-16,-30,-31,-28,-17,-15,-38,-44,-42,-52,-43,-3,-2,-32,-29,-18,-55,-58,-53,-57,-34,-47,-39,-48,-33,-59,-36,-37,-35,-45,-49,-51,-56,-46,-54,-40,-41,-50,-20,-23,-4,-24,-22,-21,-19,-25,]),'REPEAT':([1,7,9,30,105,109,113,114,118,120,121,130,131,],[9,-9,9,9,-10,-9,9,9,9,9,9,9,9,]),'SETBELONG':([14,15,20,24,26,27,36,38,40,41,42,43,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,112,119,],[-26,-27,-30,-31,-28,53,53,-38,-44,-42,53,-43,53,53,53,-32,-29,53,-55,-58,-53,-57,-34,-47,-39,-48,-33,None,-36,-37,-35,-45,-49,53,-56,-46,-54,-40,-41,53,53,53,53,]),'STRING':([4,6,16,17,18,21,22,23,25,28,34,35,39,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,75,76,110,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'FOR':([1,7,9,30,105,109,113,114,118,120,121,130,131,],[10,-9,10,10,-10,-9,10,10,10,10,10,10,10,]),'EQUAL':([14,15,20,24,26,27,36,38,40,41,42,43,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,112,119,],[-26,-27,-30,-31,-28,47,47,-38,-44,-42,47,-43,47,47,47,-32,-29,47,-55,None,-53,None,-34,-47,-39,-48,-33,47,-36,-37,-35,-45,-49,47,-56,-46,-54,-40,-41,47,47,47,47,]),'SETLEN':([4,6,16,17,18,21,22,23,25,28,34,35,39,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,75,76,110,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'SETMAX':([4,6,16,17,18,21,22,23,25,28,34,35,39,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,75,76,110,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'SETTIMES':([14,15,20,24,26,27,36,38,40,41,42,43,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,112,119,],[-26,-27,-30,-31,-28,49,49,-38,49,49,49,49,49,49,49,-32,-29,49,49,49,49,49,-34,-47,49,-48,-33,49,-36,-37,-35,49,-49,49,49,49,49,49,49,49,49,49,49,]),'MODULE':([14,15,20,24,26,27,36,38,40,41,42,43,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,112,119,],[-26,-27,-30,-31,-28,55,55,-38,55,55,55,55,55,55,55,-32,-29,55,55,55,55,55,55,55,55,55,55,55,-36,-37,-35,55,55,55,55,55,55,55,55,55,55,55,55,]),'CLOSECURLY':([7,14,15,20,24,26,27,30,37,38,40,41,42,43,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,109,118,],[-9,-26,-27,-30,-31,-28,-17,67,80,-38,-44,-42,-52,-43,-32,-29,-18,-55,-58,-53,-57,-34,-47,-39,-48,-33,-59,-36,-37,-35,-45,-49,-51,-56,-46,-54,-40,-41,-50,-10,-9,126,]),'SETINTERSECTION':([14,15,20,24,26,27,36,38,40,41,42,43,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,112,119,],[-26,-27,-30,-31,-28,63,63,-38,-44,-42,63,-43,63,63,63,-32,-29,63,63,63,63,63,-34,-47,63,-48,-33,63,-36,-37,-35,-45,-49,63,63,-46,63,-40,63,63,63,63,63,]),'SETPLUS':([14,15,20,24,26,27,36,38,40,41,42,43,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,112,119,],[-26,-27,-30,-31,-28,57,57,-38,57,57,57,57,57,57,57,-32,-29,57,57,57,57,57,-34,-47,57,-48,-33,57,-36,-37,-35,-45,-49,57,57,-46,57,57,57,57,57,57,57,]),'SETMOD':([14,15,20,24,26,27,36,38,40,41,42,43,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,112,119,],[-26,-27,-30,-31,-28,58,58,-38,58,58,58,58,58,58,58,-32,-29,58,58,58,58,58,-34,-47,58,-48,-33,58,-36,-37,-35,58,-49,58,58,58,58,58,58,58,58,58,58,]),'ELSE':([13,14,15,19,20,24,26,27,29,38,40,41,42,43,67,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,122,123,126,127,128,129,132,133,],[-14,-26,-27,-16,-30,-31,-28,-17,-15,-38,-44,-42,-52,-43,-3,-2,-32,-29,-18,-55,-58,-53,-57,-34,-47,-39,-48,-33,-59,-36,-37,-35,-45,-49,-51,-56,-46,-54,-40,-41,-50,130,-23,-4,-24,-22,-21,-19,-25,]),'ID':([1,3,4,6,7,9,10,16,17,18,21,22,23,25,28,30,34,35,39,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,69,70,71,72,75,76,105,108,109,110,113,114,115,118,120,121,130,131,],[11,13,24,24,-9,11,33,24,24,24,24,24,24,24,24,11,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-13,106,-11,-12,24,24,-10,106,-9,24,11,11,124,11,11,11,11,11,]),'IF':([1,7,9,30,105,109,113,114,118,120,121,130,131,],[12,-9,12,12,-10,-9,12,12,12,12,12,12,12,]),'AND':([14,15,20,24,26,27,36,38,40,41,42,43,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,112,119,],[-26,-27,-30,-31,-28,59,59,-38,-44,-42,-52,-43,59,59,59,-32,-29,59,-55,-58,-53,-57,-34,-47,-39,-48,-33,-59,-36,-37,-35,-45,-49,-51,-56,-46,-54,-40,-41,59,59,59,59,]),'SETMIN':([4,6,16,17,18,21,22,23,25,28,34,35,39,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,75,76,110,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'FALSE':([4,6,16,17,18,21,22,23,25,28,34,35,39,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,75,76,110,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'GREATEQ':([14,15,20,24,26,27,36,38,40,41,42,43,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,112,119,],[-26,-27,-30,-31,-28,60,60,-38,-44,-42,60,-43,60,60,60,-32,-29,60,None,60,None,60,-34,-47,-39,-48,-33,60,-36,-37,-35,-45,-49,60,None,-46,None,-40,-41,60,60,60,60,]),'INT':([31,73,116,125,],[71,71,-5,-6,]),'MAX':([33,],[76,]),'SETMINUS':([14,15,20,24,26,27,36,38,40,41,42,43,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,112,119,],[-26,-27,-30,-31,-28,61,61,-38,61,61,61,61,61,61,61,-32,-29,61,61,61,61,61,-34,-47,61,-48,-33,61,-36,-37,-35,-45,-49,61,61,-46,61,61,61,61,61,61,61,]),'LESSEQ':([14,15,20,24,26,27,36,38,40,41,42,43,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,112,119,],[-26,-27,-30,-31,-28,62,62,-38,-44,-42,62,-43,62,62,62,-32,-29,62,None,62,None,62,-34,-47,-39,-48,-33,62,-36,-37,-35,-45,-49,62,None,-46,None,-40,-41,62,62,62,62,]),'BOOL':([31,73,116,125,],[72,72,-5,-6,]),'MIN':([33,],[75,]),'NOT':([4,6,16,17,18,21,22,23,25,28,34,35,39,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,75,76,110,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'USING':([7,],[31,]),'SETDIFFERENCE':([14,15,20,24,26,27,36,38,40,41,42,43,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,112,119,],[-26,-27,-30,-31,-28,64,64,-38,-44,-42,64,-43,64,64,64,-32,-29,64,64,64,64,64,-34,-47,-39,-48,-33,64,-36,-37,-35,-45,-49,64,64,-46,64,-40,-41,64,64,64,64,]),'OR':([14,15,20,24,26,27,36,38,40,41,42,43,66,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,112,119,],[-26,-27,-30,-31,-28,65,65,-38,-44,-42,-52,-43,65,65,65,-32,-29,65,-55,-58,-53,-57,-34,-47,-39,-48,-33,-59,-36,-37,-35,-45,-49,-51,-56,-46,-54,-40,-41,-50,65,65,65,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'data_type':([31,73,],[70,108,]),'program':([0,],[2,]),'declare_list':([31,],[73,]),'statement':([1,9,30,113,114,118,120,121,130,131,],[8,32,68,122,123,68,128,129,132,133,]),'declare_comma_list':([70,108,],[107,117,]),'statement_list':([7,109,],[30,118,]),'expression':([4,6,16,17,18,21,22,23,25,28,34,35,39,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,75,76,110,],[27,27,36,27,38,40,41,42,43,66,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,112,119,]),'comma_list':([4,6,17,],[19,29,37,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM statement','program',2,'p_program','parser.py',17),
  ('statement -> ID ASSIGN expression','statement',3,'p_statement_assing','parser.py',28),
  ('statement -> OPENCURLY statement_list CLOSECURLY','statement',3,'p_statement_block','parser.py',37),
  ('statement -> OPENCURLY USING declare_list IN statement_list CLOSECURLY','statement',6,'p_statement_block','parser.py',38),
  ('declare_list -> data_type declare_comma_list SEMICOLON','declare_list',3,'p_statement_declare_list','parser.py',48),
  ('declare_list -> declare_list data_type declare_comma_list SEMICOLON','declare_list',4,'p_statement_declare_list','parser.py',49),
  ('declare_comma_list -> ID','declare_comma_list',1,'p_statement_declare_comma_list','parser.py',58),
  ('declare_comma_list -> declare_comma_list COMMA ID','declare_comma_list',3,'p_statement_declare_comma_list','parser.py',59),
  ('statement_list -> <empty>','statement_list',0,'p_statement_statement_list','parser.py',68),
  ('statement_list -> statement_list statement SEMICOLON','statement_list',3,'p_statement_statement_list','parser.py',69),
  ('data_type -> INT','data_type',1,'p_data_type','parser.py',78),
  ('data_type -> BOOL','data_type',1,'p_data_type','parser.py',79),
  ('data_type -> SET','data_type',1,'p_data_type','parser.py',80),
  ('statement -> SCAN ID','statement',2,'p_statement_scan','parser.py',88),
  ('statement -> PRINT comma_list','statement',2,'p_statement_print','parser.py',94),
  ('statement -> PRINTLN comma_list','statement',2,'p_statement_print','parser.py',95),
  ('comma_list -> expression','comma_list',1,'p_statement_comma_list','parser.py',107),
  ('comma_list -> comma_list COMMA expression','comma_list',3,'p_statement_comma_list','parser.py',108),
  ('statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement','statement',7,'p_statement_if','parser.py',119),
  ('statement -> IF OPENPAREN expression CLOSEPAREN statement','statement',5,'p_statement_if','parser.py',120),
  ('statement -> FOR ID MAX expression DO statement','statement',6,'p_statement_for','parser.py',132),
  ('statement -> FOR ID MIN expression DO statement','statement',6,'p_statement_for','parser.py',133),
  ('statement -> WHILE OPENPAREN expression CLOSEPAREN DO statement','statement',6,'p_statement_while','parser.py',140),
  ('statement -> REPEAT statement WHILE OPENPAREN expression CLOSEPAREN','statement',6,'p_statement_repeat','parser.py',146),
  ('statement -> REPEAT statement WHILE OPENPAREN expression CLOSEPAREN DO statement','statement',8,'p_statement_repeat_while','parser.py',152),
  ('expression -> NUMBER','expression',1,'p_exp_int_literal','parser.py',193),
  ('expression -> TRUE','expression',1,'p_exp_bool_literal','parser.py',199),
  ('expression -> FALSE','expression',1,'p_exp_bool_literal','parser.py',200),
  ('expression -> OPENCURLY comma_list CLOSECURLY','expression',3,'p_exp_set_literal','parser.py',206),
  ('expression -> STRING','expression',1,'p_exp_string_literal','parser.py',212),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',218),
  ('expression -> OPENPAREN expression CLOSEPAREN','expression',3,'p_expression_group','parser.py',224),
  ('expression -> expression PLUS expression','expression',3,'p_exp_int_binary','parser.py',232),
  ('expression -> expression MINUS expression','expression',3,'p_exp_int_binary','parser.py',233),
  ('expression -> expression TIMES expression','expression',3,'p_exp_int_binary','parser.py',234),
  ('expression -> expression DIVIDE expression','expression',3,'p_exp_int_binary','parser.py',235),
  ('expression -> expression MODULE expression','expression',3,'p_exp_int_binary','parser.py',236),
  ('expression -> MINUS expression','expression',2,'p_exp_int_unary','parser.py',249),
  ('expression -> expression SETUNION expression','expression',3,'p_exp_set_binary','parser.py',255),
  ('expression -> expression SETINTERSECTION expression','expression',3,'p_exp_set_binary','parser.py',256),
  ('expression -> expression SETDIFFERENCE expression','expression',3,'p_exp_set_binary','parser.py',257),
  ('expression -> SETMAX expression','expression',2,'p_exp_set_unary','parser.py',268),
  ('expression -> SETMIN expression','expression',2,'p_exp_set_unary','parser.py',269),
  ('expression -> SETLEN expression','expression',2,'p_exp_set_unary','parser.py',270),
  ('expression -> expression SETPLUS expression','expression',3,'p_exp_int_set_binary','parser.py',281),
  ('expression -> expression SETMINUS expression','expression',3,'p_exp_int_set_binary','parser.py',282),
  ('expression -> expression SETTIMES expression','expression',3,'p_exp_int_set_binary','parser.py',283),
  ('expression -> expression SETDIVITION expression','expression',3,'p_exp_int_set_binary','parser.py',284),
  ('expression -> expression SETMOD expression','expression',3,'p_exp_int_set_binary','parser.py',285),
  ('expression -> expression OR expression','expression',3,'p_exp_bool_binary','parser.py',298),
  ('expression -> expression AND expression','expression',3,'p_exp_bool_binary','parser.py',299),
  ('expression -> NOT expression','expression',2,'p_exp_bool_unary','parser.py',309),
  ('expression -> expression LESS expression','expression',3,'p_exp_bool_compare','parser.py',320),
  ('expression -> expression LESSEQ expression','expression',3,'p_exp_bool_compare','parser.py',321),
  ('expression -> expression GREAT expression','expression',3,'p_exp_bool_compare','parser.py',322),
  ('expression -> expression GREATEQ expression','expression',3,'p_exp_bool_compare','parser.py',323),
  ('expression -> expression EQUAL expression','expression',3,'p_exp_bool_compare','parser.py',324),
  ('expression -> expression UNEQUAL expression','expression',3,'p_exp_bool_compare','parser.py',325),
  ('expression -> expression SETBELONG expression','expression',3,'p_exp_bool_int_set','parser.py',339),
]
